#include <iostream>
#include <math.h>

using namespace std;


int main()
{
    setlocale(0, "");
    double A[3][3] = { { 0.14,0.24,-0.84},{1.07,-0.83,0.56},{0.64,0.43,-0.38} }, B[3][1] = { {1.11},{0.48},{-0.83} };
    double A1[3][3], A2[3][3], A3[3][3],B1[3][1], B2[3][1], B3[3][1];
    for (int i = 0; i < 3; i++)
    {//lol
        
        for (int b = 0; b < 3; b++)
        {
            A1[b][i] = A[b][i];
            A2[b][i] = A[b][i];
            A3[b][i] = A[b][i];
        }
    }
    for (int i = 0; i < 3; i++)
    {

        B1[i][0] = B[i][0];
        B2[i][0] = B[i][0];
        B3[i][0] = B[i][0];
    }
    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A[i][b] << " ";
        }
        if (i == 0 )
        {
            cout << "  "<<B[0][0];
        }
        if (i == 1)
        {
            cout << "= "<<B[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B[2][0];
        }
        cout << "\n";
    }
    /* --------------------------------------------------------------------------------------------------------------*/
    int max_i;
    double max = A[0][0];
    for (int i = 0; i < 3; i++)//определение максимального элемента в 1 столбце
    {
        
        if (A[i][0] > max)
        {
            max = A[i][0];
            max_i = i;
        }
        
    }
    cout << "\n";
    cout << max;
    cout << "\n";
    cout << "\n";
    for (int i = 0; i < 3; ++i)//переставление строк
    {
       
        swap(A[0][i],A[max_i][i]);

    }
    swap(B[0][0], B[max_i][0]);

    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A[i][b] << " ";
        }
        if (i == 0)
        {
            cout << "  " << B[0][0];
        }
        if (i == 1)
        {
            cout << "= " << B[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B[2][0];
        }
        cout << "\n";
    }

    cout << "\n";
    //привидение к диагональному виду с 0 под главной диагональю

   
    for (int i = 0; i < 3; i++) 
    {
        A[0][i] = A[0][i] / max;//деление на макс элемент
    }


    B[0][0] = B[0][0] / max;


    double t;
    for (int b = 1; b < 3; b++)
    {
        for (int i = 0; i < 3; i++)
        {
            A[0][i] = A[0][i] * A[b][0];
        }
        B[0][0] = B[0][0] * A[b][0];
        double t = A[b][0];


        for (int i = 0; i < 3; i++)
        {
            A[b][i] = A[b][i] - A[0][i];
        }
        B[b][0] = B[b][0] - B[0][0];


        for (int i = 0; i < 3; i++)
        {
            A[0][i] = A[0][i] / t;
        }
        B[0][0] = B[0][0] / t;


    }
    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A[i][b] << " ";
        }
        if (i == 0)
        {
            cout << "  " << B[0][0];
        }
        if (i == 1)
        {
            cout << "= " << B[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B[2][0];
        }
        cout << "\n";
    }

    cout << "\n";
    t = A[1][1];
    for (int i = 0; i < 3; i++)
        {
            A[1][i] = A[1][i] /t;
        }
    B[1][0] = B[1][0] / t;

    t = A[2][1];
    for (int i = 0; i < 3; i++)
    {
        A[1][i] = A[1][i] * t;
    }
    B[1][0] = B[1][0] * t;


    for (int i = 0; i < 3; i++)
    {
        A[2][i] = A[2][i] - A[1][i];
    }
    B[2][0] = B[2][0] - B[1][0];

    for (int i = 0; i <3; i++)
    {
        A[1][i] = A[1][i] / t;
    }

    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A[i][b] << " ";
        }
        if (i == 0)
        {
            cout << "  " << B[0][0];
        }
        if (i == 1)
        {
            cout << "= " << B[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B[2][0];
        }
        cout << "\n";
    }
    cout << "\n";
    B[1][0] = B[1][0] / t;
    t = A[2][2];
    A[2][2] = A[2][2] / t;
    B[2][0] = B[2][0] / t;
    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A[i][b] << " ";
        }
        if (i == 0)
        {
            cout << "  " << B[0][0];
        }
        if (i == 1)
        {
            cout << "= " << B[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B[2][0];
        }
        cout << "\n";
    }

    cout << "\n";
   


    


    // начинаем предовать значение переменным и решать матрицу
    double x1, x2, x3;
    x3 = B[2][0];
    x2 = (B[1][0] - (x3 * A[1][2])) ;
    x1 = B[0][0] - (x3 * A[0][2]) - (x2 * A[0][1]) ;
    // вывод результатов

    cout<<"\n" << "Ответ:" << "\n" << "x1 = " << x1 << "\n" << "x2 = " << x2 << "\n" << "x3 = " << x3;
    cout << "\n";
    cout << "\n";
    /* --------------------------------------------------------------------------------------------------------------*/
    // взятие новых переменных у которые равняются округлением х до десятитысячной
    double y1 = round(x1 * 10000.0) / 10000.0 , y2 = round(x2 * 10000.0) / 10000.0, y3 = round(x3 * 10000.0) / 10000.0;
    

    cout << "\n" << "\n" << y1 << "\n" << y2 << "\n" << y3 << "\n";

    for (int i = 0; i < 3; i++)
    {

        A1[i][0] *= y1;
        A1[i][1] *= y2;
        A1[i][2] *= y3;

    }
    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A1[i][b] << " ";
        }

        cout << "\n";
    }
    for (int i = 0; i < 3; i++)
    {
        B1[i][0] = (A1[i][0] + A1[i][1] + A1[i][2]);
    }
    cout << "\n";
    for (int b = 0; b < 3; ++b)
    {
        cout << B1[b][0] << "\n";
    }
    cout << "\n";

   /* --------------------------------------------------------------------------------------------------------------*/
    cout << "\n";

    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A2[i][b] << " ";
        }
        if (i == 0)
        {
            cout << "  " << B1[0][0];
        }
        if (i == 1)
        {
            cout << "= " << B1[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B1[2][0];
        }
        cout << "\n";
    }

    for (int i = 0; i < 3; i++)//определение максимального элемента в 1 столбце
    {

        if (A2[i][0] >= max)
        {
            max = A2[i][0];
            max_i = i;
        }

    }
    cout << "\n";
    cout << max;
    cout << "\n";
    cout << "\n";
    for (int i = 0; i < 3; ++i)//переставление строк
    {

        swap(A2[0][i], A2[max_i][i]);

    }
    swap(B1[0][0], B1[max_i][0]);

    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A2[i][b] << " ";
        }
        if (i == 0)
        {
            cout << "  " << B1[0][0];
        }
        if (i == 1)
        {
            cout << "= " << B1[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B1[2][0];
        }
        cout << "\n";
    }
    cout << "\n";
    for (int i = 0; i < 3; i++)
    {
        A2[0][i] = A2[0][i] / max;//деление на макс элемент
    }


    B1[0][0] = B1[0][0] / max;



    for (int b = 1; b < 3; b++)
    {
        for (int i = 0; i < 3; i++)
        {
            A2[0][i] = A2[0][i] * A2[b][0];
        }
        B1[0][0] = B1[0][0] * A2[b][0];
        double t = A2[b][0];


        for (int i = 0; i < 3; i++)
        {
            A2[b][i] = A2[b][i] - A2[0][i];
        }
        B1[b][0] = B1[b][0] - B1[0][0];


        for (int i = 0; i < 3; i++)
        {
            A2[0][i] = A2[0][i] / t;
        }
        B1[0][0] = B1[0][0] / t;


    }
    t = A2[1][1];
    for (int i = 0; i < 3; i++)
    {
        A2[1][i] = A2[1][i] / t;
    }
    B1[1][0] = B1[1][0] / t;

    t = A2[2][1];
    for (int i = 0; i < 3; i++)
    {
        A2[1][i] = A2[1][i] * t;
    }
    B1[1][0] = B1[1][0] * t;

    for (int i = 0; i < 3; i++)
    {
        A2[2][i] = A2[2][i] - A2[1][i];
    }
    B1[2][0] = B1[2][0] - B1[1][0];

    for (int i = 0; i < 3; i++)
    {
        A2[1][i] = A2[1][i] / t;
    }
    B1[1][0] = B1[1][0] / t;
    cout << "\n";
    for (int i = 0; i < 3; ++i)//вывод массива
    {
        for (int b = 0; b < 3; ++b)
        {
            cout << A2[i][b] << " ";
        }
        if (i == 0)
        {
            cout << "  " << B1[0][0];
        }
        if (i == 1)
        {
            cout << "= " << B1[1][0];
        }
        if (i == 2)
        {
            cout << "  " << B1[2][0];
        }
        cout << "\n";
    }

    cout << "\n";
    t = A2[2][2];
    A2[2][2] = A2[2][2] / t;
    B1[2][0] = B1[2][0] / t;

    // начинаем предовать значение переменным и решать матрицу
    double x_1, x_2, x_3;
    x_3 = B1[2][0]/A2[2][2];
    x_2 = (B1[1][0] - (x_3 * A2[1][2]));
    x_1 = B1[0][0] - (x_3 * A2[0][2]) - (x_2 * A2[0][1]);
    // вывод результатов

    cout << "\n" << "Ответ:" << "\n" << "x_1 = " << x_1 << "\n" << "x_2 = " << x_2 << "\n" << "x_3 = " << x_3;
    cout << "\n";
    cout << "\n";
    /* --------------------------------------------------------------------------------------------------------------*/

    double F[3] = { (A3[0][0] * x_1 + A3[0][1] * x_2 + A3[0][0] * x_3) - B2[0][0],(A3[1][0] * x_1 + A3[1][1] * x_2 + A3[1][0] * x_3) - B2[1][0],(A3[2][0] * x_1 + A3[2][1] * x_2 + A3[2][0] * x_3) - B2[2][0] };
    cout << "\n" <<"Вектор F:" << "\n" << F[0] << "\n" << F[1] << "\n" << F[2];
    double p = sqrt(fabs(F[0]) + fabs(F[1]) + fabs(F[2]));
    cout << "\n" << "\n"<<"Нарма вектора F:" << p;

}

